_mm512_cdfnorm_pd
^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512d
:Param Types:
    __m512d a
:Param ETypes:
    FP64 a

.. code-block:: C

    __m512d _mm512_cdfnorm_pd(__m512d a);

.. admonition:: Intel Description

    Compute the cumulative distribution function of packed double-precision (64-bit) floating-point elements in "a" using the normal distribution, and store the results in "dst".

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 7
        	i := j*64
        	dst[i+63:i] := CDFNormal(a[i+63:i])
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_mask_cdfnorm_pd
^^^^^^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512d
:Param Types:
    __m512d src, 
    __mmask8 k, 
    __m512d a
:Param ETypes:
    FP64 src, 
    MASK k, 
    FP64 a

.. code-block:: C

    __m512d _mm512_mask_cdfnorm_pd(__m512d src, __mmask8 k,
                                   __m512d a)

.. admonition:: Intel Description

    Compute the cumulative distribution function of packed double-precision (64-bit) floating-point elements in "a" using the normal distribution, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 7
        	i := j*64
        	IF k[j]
        		dst[i+63:i] := CDFNormal(a[i+63:i])
        	ELSE
        		dst[i+63:i] := src[i+63:i]
        	FI
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_cdfnorm_ps
^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512
:Param Types:
    __m512 a
:Param ETypes:
    FP32 a

.. code-block:: C

    __m512 _mm512_cdfnorm_ps(__m512 a);

.. admonition:: Intel Description

    Compute the cumulative distribution function of packed single-precision (32-bit) floating-point elements in "a" using the normal distribution, and store the results in "dst".

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 15
        	i := j*32
        	dst[i+31:i] := CDFNormal(a[i+31:i])
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_mask_cdfnorm_ps
^^^^^^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512
:Param Types:
    __m512 src, 
    __mmask16 k, 
    __m512 a
:Param ETypes:
    FP32 src, 
    MASK k, 
    FP32 a

.. code-block:: C

    __m512 _mm512_mask_cdfnorm_ps(__m512 src, __mmask16 k,
                                  __m512 a)

.. admonition:: Intel Description

    Compute the cumulative distribution function of packed single-precision (32-bit) floating-point elements in "a" using the normal distribution, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 15
        	i := j*32
        	IF k[j]
        		dst[i+31:i] := CDFNormal(a[i+31:i])
        	ELSE
        		dst[i+31:i] := src[i+31:i]
        	FI
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_cdfnorminv_pd
^^^^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512d
:Param Types:
    __m512d a
:Param ETypes:
    FP64 a

.. code-block:: C

    __m512d _mm512_cdfnorminv_pd(__m512d a);

.. admonition:: Intel Description

    Compute the inverse cumulative distribution function of packed double-precision (64-bit) floating-point elements in "a" using the normal distribution, and store the results in "dst".

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 7
        	i := j*64
        	dst[i+63:i] := InverseCDFNormal(a[i+63:i])
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_mask_cdfnorminv_pd
^^^^^^^^^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512d
:Param Types:
    __m512d src, 
    __mmask8 k, 
    __m512d a
:Param ETypes:
    FP64 src, 
    MASK k, 
    FP64 a

.. code-block:: C

    __m512d _mm512_mask_cdfnorminv_pd(__m512d src, __mmask8 k,
                                      __m512d a)

.. admonition:: Intel Description

    Compute the inverse cumulative distribution function of packed double-precision (64-bit) floating-point elements in "a" using the normal distribution, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 7
        	i := j*64
        	IF k[j]
        		dst[i+63:i] := InverseCDFNormal(a[i+63:i])
        	ELSE
        		dst[i+63:i] := src[i+63:i]
        	FI
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_cdfnorminv_ps
^^^^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512
:Param Types:
    __m512 a
:Param ETypes:
    FP32 a

.. code-block:: C

    __m512 _mm512_cdfnorminv_ps(__m512 a);

.. admonition:: Intel Description

    Compute the inverse cumulative distribution function of packed single-precision (32-bit) floating-point elements in "a" using the normal distribution, and store the results in "dst".

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 15
        	i := j*32
        	dst[i+31:i] := InverseCDFNormal(a[i+31:i])
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_mask_cdfnorminv_ps
^^^^^^^^^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512
:Param Types:
    __m512 src, 
    __mmask16 k, 
    __m512 a
:Param ETypes:
    FP32 src, 
    MASK k, 
    FP32 a

.. code-block:: C

    __m512 _mm512_mask_cdfnorminv_ps(__m512 src, __mmask16 k,
                                     __m512 a)

.. admonition:: Intel Description

    Compute the inverse cumulative distribution function of packed single-precision (32-bit) floating-point elements in "a" using the normal distribution, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 15
        	i := j*32
        	IF k[j]
        		dst[i+31:i] := InverseCDFNormal(a[i+31:i])
        	ELSE
        		dst[i+31:i] := src[i+31:i]
        	FI
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_erf_pd
^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512d
:Param Types:
    __m512d a
:Param ETypes:
    FP64 a

.. code-block:: C

    __m512d _mm512_erf_pd(__m512d a);

.. admonition:: Intel Description

    Compute the error function of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst".

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 7
        	i := j*64
        	dst[i+63:i] := ERF(a[i+63:i])
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_mask_erf_pd
^^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512d
:Param Types:
    __m512d src, 
    __mmask8 k, 
    __m512d a
:Param ETypes:
    FP64 src, 
    MASK k, 
    FP64 a

.. code-block:: C

    __m512d _mm512_mask_erf_pd(__m512d src, __mmask8 k,
                               __m512d a)

.. admonition:: Intel Description

    Compute the error function of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 7
        	i := j*64
        	IF k[j]
        		dst[i+63:i] := ERF(a[i+63:i])
        	ELSE
        		dst[i+63:i] := src[i+63:i]
        	FI
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_erfc_pd
^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512d
:Param Types:
    __m512d a
:Param ETypes:
    FP64 a

.. code-block:: C

    __m512d _mm512_erfc_pd(__m512d a);

.. admonition:: Intel Description

    Compute the complementary error function of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst".

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 7
        	i := j*64
        	dst[i+63:i] := 1.0 - ERF(a[i+63:i])
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_mask_erfc_pd
^^^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512d
:Param Types:
    __m512d src, 
    __mmask8 k, 
    __m512d a
:Param ETypes:
    FP64 src, 
    MASK k, 
    FP64 a

.. code-block:: C

    __m512d _mm512_mask_erfc_pd(__m512d src, __mmask8 k,
                                __m512d a)

.. admonition:: Intel Description

    Compute the complementary error function of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 7
        	i := j*64
        	IF k[j]
        		dst[i+63:i] := 1.0 - ERF(a[i+63:i])
        	ELSE
        		dst[i+63:i] := src[i+63:i]
        	FI
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_erf_ps
^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512
:Param Types:
    __m512 a
:Param ETypes:
    FP32 a

.. code-block:: C

    __m512 _mm512_erf_ps(__m512 a);

.. admonition:: Intel Description

    Compute the error function of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst".

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 15
        	i := j*32
        	dst[i+31:i] := ERF(a[i+31:i])
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_mask_erf_ps
^^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512
:Param Types:
    __m512 src, 
    __mmask16 k, 
    __m512 a
:Param ETypes:
    FP32 src, 
    MASK k, 
    FP32 a

.. code-block:: C

    __m512 _mm512_mask_erf_ps(__m512 src, __mmask16 k,
                              __m512 a)

.. admonition:: Intel Description

    Compute the error function of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 15
        	i := j*32
        	IF k[j]
        		dst[i+31:i] := ERF(a[i+31:i])
        	ELSE
        		dst[i+31:i] := src[i+31:i]
        	FI
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_erfc_ps
^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512
:Param Types:
    __m512 a
:Param ETypes:
    FP32 a

.. code-block:: C

    __m512 _mm512_erfc_ps(__m512 a);

.. admonition:: Intel Description

    Compute the complementary error function of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst".

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 15
        	i := j*32
        	dst[i+63:i] := 1.0 - ERF(a[i+31:i])
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_mask_erfc_ps
^^^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512
:Param Types:
    __m512 src, 
    __mmask16 k, 
    __m512 a
:Param ETypes:
    FP32 src, 
    MASK k, 
    FP32 a

.. code-block:: C

    __m512 _mm512_mask_erfc_ps(__m512 src, __mmask16 k,
                               __m512 a)

.. admonition:: Intel Description

    Compute the complementary error function of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 15
        	i := j*32
        	IF k[j]
        		dst[i+63:i] := 1.0 - ERF(a[i+31:i])
        	ELSE
        		dst[i+31:i] := src[i+31:i]
        	FI
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_erfinv_pd
^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512d
:Param Types:
    __m512d a
:Param ETypes:
    FP64 a

.. code-block:: C

    __m512d _mm512_erfinv_pd(__m512d a);

.. admonition:: Intel Description

    Compute the inverse error function of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst".

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 7
        	i := j*64
        	dst[i+63:i] := 1.0 / ERF(a[i+63:i])
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_mask_erfinv_pd
^^^^^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512d
:Param Types:
    __m512d src, 
    __mmask8 k, 
    __m512d a
:Param ETypes:
    FP64 src, 
    MASK k, 
    FP64 a

.. code-block:: C

    __m512d _mm512_mask_erfinv_pd(__m512d src, __mmask8 k,
                                  __m512d a)

.. admonition:: Intel Description

    Compute the inverse error function of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 7
        	i := j*64
        	IF k[j]
        		dst[i+63:i] := 1.0 / ERF(a[i+63:i])
        	ELSE
        		dst[i+63:i] := src[i+63:i]
        	FI
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_erfinv_ps
^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512
:Param Types:
    __m512 a
:Param ETypes:
    FP32 a

.. code-block:: C

    __m512 _mm512_erfinv_ps(__m512 a);

.. admonition:: Intel Description

    Compute the inverse error function of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst".

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 15
        	i := j*32
        	dst[i+63:i] := 1.0 / ERF(a[i+31:i])
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_mask_erfinv_ps
^^^^^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512
:Param Types:
    __m512 src, 
    __mmask16 k, 
    __m512 a
:Param ETypes:
    FP32 src, 
    MASK k, 
    FP32 a

.. code-block:: C

    __m512 _mm512_mask_erfinv_ps(__m512 src, __mmask16 k,
                                 __m512 a)

.. admonition:: Intel Description

    Compute the inverse error function of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 15
        	i := j*32
        	IF k[j]
        		dst[i+63:i] := 1.0 / ERF(a[i+31:i])
        	ELSE
        		dst[i+31:i] := src[i+31:i]
        	FI
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_erfcinv_pd
^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512d
:Param Types:
    __m512d a
:Param ETypes:
    FP64 a

.. code-block:: C

    __m512d _mm512_erfcinv_pd(__m512d a);

.. admonition:: Intel Description

    Compute the inverse complementary error function of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst".

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 7
        	i := j*64
        	dst[i+63:i] := 1.0 / (1.0 - ERF(a[i+63:i]))
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_mask_erfcinv_pd
^^^^^^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512d
:Param Types:
    __m512d src, 
    __mmask8 k, 
    __m512d a
:Param ETypes:
    FP64 src, 
    MASK k, 
    FP64 a

.. code-block:: C

    __m512d _mm512_mask_erfcinv_pd(__m512d src, __mmask8 k,
                                   __m512d a)

.. admonition:: Intel Description

    Compute the inverse complementary error function of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 7
        	i := j*64
        	IF k[j]
        		dst[i+63:i] := 1.0 / (1.0 - ERF(a[i+63:i]))
        	ELSE
        		dst[i+63:i] := src[i+63:i]
        	FI
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_erfcinv_ps
^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512
:Param Types:
    __m512 a
:Param ETypes:
    FP32 a

.. code-block:: C

    __m512 _mm512_erfcinv_ps(__m512 a);

.. admonition:: Intel Description

    Compute the inverse complementary error function of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst".

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 15
        	i := j*32
        	dst[i+63:i] := 1.0 / (1.0 - ERF(a[i+31:i]))
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_mask_erfcinv_ps
^^^^^^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512
:Param Types:
    __m512 src, 
    __mmask16 k, 
    __m512 a
:Param ETypes:
    FP32 src, 
    MASK k, 
    FP32 a

.. code-block:: C

    __m512 _mm512_mask_erfcinv_ps(__m512 src, __mmask16 k,
                                  __m512 a)

.. admonition:: Intel Description

    Compute the inverse complementary error function of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 15
        	i := j*32
        	IF k[j]
        		dst[i+63:i] := 1.0 / (1.0 - ERF(a[i+31:i]))
        	ELSE
        		dst[i+31:i] := src[i+31:i]
        	FI
        ENDFOR
        dst[MAX:512] := 0
        	

_mm512_cdfnorm_ph
^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512h
:Param Types:
    __m512h a
:Param ETypes:
    FP16 a

.. code-block:: C

    __m512h _mm512_cdfnorm_ph(__m512h a);

.. admonition:: Intel Description

    Compute the cumulative distribution function of packed half-precision (16-bit) floating-point elements in "a" using the normal distribution, and store the results in "dst".

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 31
        	i := j*16
        	dst[i+15:i] := CDFNormal(a[i+15:i])
        ENDFOR
        dst[MAX:512] := 0
        

_mm512_cdfnorminv_ph
^^^^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512h
:Param Types:
    __m512h a
:Param ETypes:
    FP16 a

.. code-block:: C

    __m512h _mm512_cdfnorminv_ph(__m512h a);

.. admonition:: Intel Description

    Compute the inverse cumulative distribution function of packed half-precision (16-bit) floating-point elements in "a" using the normal distribution, and store the results in "dst".

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 31
        	i := j*16
        	dst[i+15:i] := InverseCDFNormal(a[i+15:i])
        ENDFOR
        dst[MAX:512] := 0
        

_mm512_erf_ph
^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512h
:Param Types:
    __m512h a
:Param ETypes:
    FP16 a

.. code-block:: C

    __m512h _mm512_erf_ph(__m512h a);

.. admonition:: Intel Description

    Compute the error function of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst".

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 31
        	i := j*16
        	dst[i+15:i] := ERF(a[i+15:i])
        ENDFOR
        dst[MAX:512] := 0
        

_mm512_erfc_ph
^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512h
:Param Types:
    __m512h a
:Param ETypes:
    FP16 a

.. code-block:: C

    __m512h _mm512_erfc_ph(__m512h a);

.. admonition:: Intel Description

    Compute the complementary error function of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst".

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 31
        	i := j*16
        	dst[i+15:i] := 1.0 - ERF(a[i+15:i])
        ENDFOR
        dst[MAX:512] := 0
        

_mm512_erfcinv_ph
^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512h
:Param Types:
    __m512h a
:Param ETypes:
    FP16 a

.. code-block:: C

    __m512h _mm512_erfcinv_ph(__m512h a);

.. admonition:: Intel Description

    Compute the inverse complementary error function of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst".

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 31
        	i := j*16
        	dst[i+15:i] := 1.0 / (1.0 - ERF(a[i+15:i]))
        ENDFOR
        dst[MAX:512] := 0
        

_mm512_erfinv_ph
^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512h
:Param Types:
    __m512h a
:Param ETypes:
    FP16 a

.. code-block:: C

    __m512h _mm512_erfinv_ph(__m512h a);

.. admonition:: Intel Description

    Compute the inverse error function of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst".

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 31
        	i := j*16
        	dst[i+15:i] := 1.0 / ERF(a[i+15:i])
        ENDFOR
        dst[MAX:512] := 0
        

_mm512_mask_cdfnorm_ph
^^^^^^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512h
:Param Types:
    __m512h src, 
    __mmask32 k, 
    __m512h a
:Param ETypes:
    FP16 src, 
    MASK k, 
    FP16 a

.. code-block:: C

    __m512h _mm512_mask_cdfnorm_ph(__m512h src, __mmask32 k,
                                   __m512h a)

.. admonition:: Intel Description

    Compute the cumulative distribution function of packed half-precision (16-bit) floating-point elements in "a" using the normal distribution, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 31
        	i := j*16
        	IF k[j]
        		dst[i+15:i] := CDFNormal(a[i+15:i])
        	ELSE
        		dst[i+15:i] := src[i+15:i]
        	FI
        ENDFOR
        dst[MAX:512] := 0
        

_mm512_mask_cdfnorminv_ph
^^^^^^^^^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512h
:Param Types:
    __m512h src, 
    __mmask32 k, 
    __m512h a
:Param ETypes:
    FP16 src, 
    MASK k, 
    FP16 a

.. code-block:: C

    __m512h _mm512_mask_cdfnorminv_ph(__m512h src, __mmask32 k,
                                      __m512h a)

.. admonition:: Intel Description

    Compute the inverse cumulative distribution function of packed half-precision (16-bit) floating-point elements in "a" using the normal distribution, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 31
        	i := j*16
        	IF k[j]
        		dst[i+15:i] := InverseCDFNormal(a[i+15:i])
        	ELSE
        		dst[i+15:i] := src[i+15:i]
        	FI
        ENDFOR
        dst[MAX:512] := 0
        

_mm512_mask_erf_ph
^^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512h
:Param Types:
    __m512h src, 
    __mmask32 k, 
    __m512h a
:Param ETypes:
    FP16 src, 
    MASK k, 
    FP16 a

.. code-block:: C

    __m512h _mm512_mask_erf_ph(__m512h src, __mmask32 k,
                               __m512h a)

.. admonition:: Intel Description

    Compute the error function of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 31
        	i := j*16
        	IF k[j]
        		dst[i+15:i] := ERF(a[i+15:i])
        	ELSE
        		dst[i+15:i] := src[i+15:i]
        	FI
        ENDFOR
        dst[MAX:512] := 0
        

_mm512_mask_erfc_ph
^^^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512h
:Param Types:
    __m512h src, 
    __mmask32 k, 
    __m512h a
:Param ETypes:
    FP16 src, 
    MASK k, 
    FP16 a

.. code-block:: C

    __m512h _mm512_mask_erfc_ph(__m512h src, __mmask32 k,
                                __m512h a)

.. admonition:: Intel Description

    Compute the complementary error function of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 31
        	i := j*16
        	IF k[j]
        		dst[i+15:i] := 1.0 - ERF(a[i+15:i])
        	ELSE
        		dst[i+15:i] := src[i+15:i]
        	FI
        ENDFOR
        dst[MAX:512] := 0
        

_mm512_mask_erfcinv_ph
^^^^^^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512h
:Param Types:
    __m512h src, 
    __mmask32 k, 
    __m512h a
:Param ETypes:
    FP16 src, 
    MASK k, 
    FP16 a

.. code-block:: C

    __m512h _mm512_mask_erfcinv_ph(__m512h src, __mmask32 k,
                                   __m512h a)

.. admonition:: Intel Description

    Compute the inverse complementary error function of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 31
        	i := j*16
        	IF k[j]
        		dst[i+15:i] := 1.0 / (1.0 - ERF(a[i+15:i]))
        	ELSE
        		dst[i+15:i] := src[i+15:i]
        	FI
        ENDFOR
        dst[MAX:512] := 0
        

_mm512_mask_erfinv_ph
^^^^^^^^^^^^^^^^^^^^^
:Tech: SVML
:Category: Probability/Statistics
:Header: immintrin.h
:Register: ZMM 512 bit
:Return Type: __m512h
:Param Types:
    __m512h src, 
    __mmask32 k, 
    __m512h a
:Param ETypes:
    FP16 src, 
    MASK k, 
    FP16 a

.. code-block:: C

    __m512h _mm512_mask_erfinv_ph(__m512h src, __mmask32 k,
                                  __m512h a)

.. admonition:: Intel Description

    Compute the inverse error function of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        FOR j := 0 to 31
        	i := j*16
        	IF k[j]
        		dst[i+15:i] := 1.0 / ERF(a[i+15:i])
        	ELSE
        		dst[i+15:i] := src[i+15:i]
        	FI
        ENDFOR
        dst[MAX:512] := 0
        


_mm_maskstore_pd
^^^^^^^^^^^^^^^^
:Tech: AVX_ALL
:Category: Store
:Header: immintrin.h
:Register: XMM 128 bit
:Return Type: void
:Param Types:
    double * mem_addr, 
    __m128i mask, 
    __m128d a
:Param ETypes:
    FP64 mem_addr, 
    MASK mask, 
    FP64 a

.. code-block:: C

    void _mm_maskstore_pd(double* mem_addr, __m128i mask,
                          __m128d a)

.. admonition:: Intel Description

    Store packed double-precision (64-bit) floating-point elements from "a" into memory using "mask".

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        
        FOR j := 0 to 1
        	i := j*64
        	IF mask[i+63]
        		MEM[mem_addr+i+63:mem_addr+i] := a[i+63:i]
        	FI
        ENDFOR
        	

_mm_maskstore_ps
^^^^^^^^^^^^^^^^
:Tech: AVX_ALL
:Category: Store
:Header: immintrin.h
:Register: XMM 128 bit
:Return Type: void
:Param Types:
    float * mem_addr, 
    __m128i mask, 
    __m128 a
:Param ETypes:
    FP32 mem_addr, 
    MASK mask, 
    FP32 a

.. code-block:: C

    void _mm_maskstore_ps(float* mem_addr, __m128i mask,
                          __m128 a)

.. admonition:: Intel Description

    Store packed single-precision (32-bit) floating-point elements from "a" into memory using "mask".

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        
        FOR j := 0 to 3
        	i := j*32
        	IF mask[i+31]
        		MEM[mem_addr+i+31:mem_addr+i] := a[i+31:i]
        	FI
        ENDFOR
        	

_mm_maskstore_epi32
^^^^^^^^^^^^^^^^^^^
:Tech: AVX_ALL
:Category: Store
:Header: immintrin.h
:Register: XMM 128 bit
:Return Type: void
:Param Types:
    int* mem_addr, 
    __m128i mask, 
    __m128i a
:Param ETypes:
    UI32 mem_addr, 
    MASK mask, 
    UI32 a

.. code-block:: C

    void _mm_maskstore_epi32(int* mem_addr, __m128i mask,
                             __m128i a)

.. admonition:: Intel Description

    Store packed 32-bit integers from "a" into memory using "mask" (elements are not stored when the highest bit is not set in the corresponding element).

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        
        FOR j := 0 to 3
        	i := j*32
        	IF mask[i+31]
        		MEM[mem_addr+i+31:mem_addr+i] := a[i+31:i]
        	FI
        ENDFOR
        	

_mm_maskstore_epi64
^^^^^^^^^^^^^^^^^^^
:Tech: AVX_ALL
:Category: Store
:Header: immintrin.h
:Register: XMM 128 bit
:Return Type: void
:Param Types:
    __int64* mem_addr, 
    __m128i mask, 
    __m128i a
:Param ETypes:
    UI64 mem_addr, 
    MASK mask, 
    UI64 a

.. code-block:: C

    void _mm_maskstore_epi64(__int64* mem_addr, __m128i mask,
                             __m128i a)

.. admonition:: Intel Description

    Store packed 64-bit integers from "a" into memory using "mask" (elements are not stored when the highest bit is not set in the corresponding element).

.. admonition:: Intel Implementation Psudeo-Code

    .. code-block:: text

        
        FOR j := 0 to 1
        	i := j*64
        	IF mask[i+63]
        		MEM[mem_addr+i+63:mem_addr+i] := a[i+63:i]
        	FI
        ENDFOR
        	

